---
interface Props {
	title: string;
	tagline?: string;
	align?: "start" | "center";
}

const { align = "center", tagline, title } = Astro.props;
---

<div class:list={["hero stack gap-4", align]}>
	<div class="stack gap-2">
		<h1 class="title" id="title">{title}</h1>
		{tagline && <p class="tagline">{tagline}</p>}
	</div>
	<slot />
</div>

<style>
	.hero {
		font-size: var(--text-lg);
		text-align: center;
	}

	.title,
	.tagline {
		max-width: 37ch;
		margin-inline: auto;
	}

	.title {
		font-size: var(--text-3xl);
		color: var(--gray-0);
	}

	@keyframes typing {
		from {
			width: 0;
		}
	}

	.title {
		overflow: hidden;
		margin: 0 auto;
	}

	/* Cursor blinking animation */
	@keyframes blink-caret {
		from,
		to {
			border-color: transparent;
		}
		50% {
			border-color: rgb(0, 132, 255);
		}
	}

	@media (min-width: 50em) {
		.hero {
			font-size: var(--text-xl);
		}

		.start {
			text-align: start;
		}

		.start .title,
		.start .tagline {
			margin-inline: unset;
		}

		.title {
			font-size: var(--text-5xl);
		}
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", function () {
		const heading = document.getElementById("title");
		const text = heading.innerText;
		heading.innerText = "";

		let i = 0;
		let animationInterval;
		function type() {
			if (i < text.length) {
				heading.innerHTML += text.charAt(i);
				i++;
			} else {
				clearInterval(animationInterval); // Stop the animation
				setTimeout(restartAnimation, 1000); // Restart the animation after 2 seconds
			}
		}

		function restartAnimation() {
			heading.innerText = ""; // Clear the text
			i = 0;
			animationInterval = setInterval(type, 250); // Start typing animation
		}

		restartAnimation();
	});
</script>
